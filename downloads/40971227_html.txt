<h3>40971227</h3>
<p>心得:</p>
<p><span>這學期的計算機課程,學到了很多以前接觸不到的課程,一開始還有點不熟悉，還好之後有同學與老師的幫助</span></p>
<p><span>才終</span><span>於了解。</span></p>
<p></p>
<p><a href="/downloads/w12demo.txt">w12demo.txt</a></p>
<p><a href="https://en.wikipedia.org/wiki/Flag_of_the_Republic_of_China#Construction_details">ROC 國旗規格</a>.</p>
<p><a href="https://zh.wikipedia.org/wiki/%E4%B8%AD%E5%8D%8E%E4%BA%BA%E6%B0%91%E5%85%B1%E5%92%8C%E5%9B%BD%E5%9B%BD%E6%97%97#%E8%A7%84%E6%A0%BC">PROC 國旗規格</a> - 可以根據此規格定義, 新增 <button id="procflas">PROC flag</button> 按鈕.</p>
<p><a href="https://en.wikipedia.org/wiki/Flag_of_the_United_States#Specifications">USA 國旗規格</a> - 可以根據此規格定義, 新增 <button id="usaflag">USA flag</button> 按鈕.</p>
<!-- 導入 brython 程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<script>// <![CDATA[
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
// ]]></script>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script type="text/javascript" src="/static/ace/FileSaver.min.js"></script>
<script type="text/javascript" src="/static/ace/filereader.js"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script type="text/javascript" src="/static/ace/ace.js"></script>
<script type="text/javascript" src="/static/ace/ext-language_tools.js"></script>
<script type="text/javascript" src="/static/ace/mode-python3.js"></script>
<script type="text/javascript" src="/static/ace/snippets/python.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">// <![CDATA[
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
// ]]></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="https://mde.tw/cp2021/cmsimde/static/Cango-24v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/gearUtils-09.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/SVGpathUtils-6v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/sylvester.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/PrairieDraw.js"></script>
</p>
<p><button id="add1to100">add1to100</button><button id="p261">p261</button><button id="rocflag">ROC flag</button><button id="red">red</button><button id="red2">red2</button><button id="random">random</button><button id="gear">gear</button><button id="final"> final</button><button id="snake"> snake</button><button id="snake2">snake2</button><button id="final2">final2</button><button id="final3">final3</button></p>
<p><!-- ######################  editor1 開始 ###################### --></p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text">.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div 作為切入位置 --></p>
<!-- 這裡的畫布 id 為 brython_div -->
<div id="brython_div"></div>
<div>上課筆記</div>
<div></div>
<div>開啟作業網站流程</div>
<div>cd tmp</div>
<div></div>
<div>cd cp2021_hw</div>
<div></div>
<div>cms</div>
<div><img alt="" height="306" src="https://40971227.github.io/cp2021_hw/images/%E9%96%8B%E5%95%9F%E7%B6%B2%E7%AB%99%E4%BC%BA%E6%9C%8D%E5%99%A8.png" width="544"></div>
<div></div>
<div></div>
<div><img alt="" height="309" src="https://40971227.github.io/cp2021_hw/images/%E5%AF%86%E7%A2%BC.png" width="544"></div>
<div></div>
<div>無法cms的原因</div>
<div></div>
<div><img alt="" height="306" src="https://40971227.github.io/cp2021_hw/images/%E6%9C%AA%E5%91%BD%E5%90%8D.png" width="544"></div>
<div></div>
<div></div>
<div><img alt="" height="306" src="https://40971227.github.io/cp2021_hw/images/%E6%9C%AA%E5%91%BD%E5%90%8D2.png" width="544"></div>
<div></div>
<div></div>
<div>
<p>什麼是 pull request</p>
<p><span>Github/Bitbucket 裡面有很多功能，可能不是每個人都用過，而不同團隊的文化也不同，最近恰好遇到需</span></p>
<p><span>要用這個功能，於是看了一下這個功能的用法。</span></p>
<p class="ho hp fy hq b hr jn hs ht hu jo hv hw hx jp hy hz ia jq ib ic id jr ie if ih dn gv" data-selectable-paragraph="" id="a5ed">當開發者完成一個功能時，亦即，在一般情況下，開發者在一個他專屬的分支上進行功能開發，然後完成該</p>
<p class="ho hp fy hq b hr jn hs ht hu jo hv hw hx jp hy hz ia jq ib ic id jr ie if ih dn gv" data-selectable-paragraph="">功能。</p>
<p class="ho hp fy hq b hr jn hs ht hu jo hv hw hx jp hy hz ia jq ib ic id jr ie if ih dn gv" data-selectable-paragraph="" id="f645">這時，開發者需要將這個功能合併回<span>&nbsp;</span><code class="ji jj jk jl jm b">master</code><span>&nbsp;</span>分支，但他不可能再沒有被檢查過的情況下做合併，因此需要</p>
<p class="ho hp fy hq b hr jn hs ht hu jo hv hw hx jp hy hz ia jq ib ic id jr ie if ih dn gv" data-selectable-paragraph="">該專案的維護者或是其他工程師一起合作檢查。</p>
<p class="ho hp fy hq b hr jn hs ht hu jo hv hw hx jp hy hz ia jq ib ic id jr ie if ih dn gv" data-selectable-paragraph="" id="0f6a">因此，開發者需要告知其他人，請他們來檢查，甚至在檢查後，大家一起討論並且修改不足或是錯誤的地</p>
<p class="ho hp fy hq b hr jn hs ht hu jo hv hw hx jp hy hz ia jq ib ic id jr ie if ih dn gv" data-selectable-paragraph="">方，最後才合併。</p>
<p class="ho hp fy hq b hr jn hs ht hu jo hv hw hx jp hy hz ia jq ib ic id jr ie if ih dn gv" data-selectable-paragraph="" id="efb1"><code class="ji jj jk jl jm b">Pull Request</code><span>&nbsp;</span>就是為此而存在。</p>
<ul class="">
<li class="ho hp fy hq b hr jn hs ht hu jo hv hw hx jp hy hz ia jq ib ic id jr ie if ih js jt ju gv" data-selectable-paragraph="" id="24c2"><strong class="hq fz">通知</strong>：告知相關人士一起來檢查</li>
<li class="ho hp fy hq b hr jv hs ht hu jw hv hw hx jx hy hz ia jy ib ic id jz ie if ih js jt ju gv" data-selectable-paragraph="" id="15f6"><strong class="hq fz">討論</strong>：讓討論不分散，集中在某個畫面上，致使訊息不流失</li>
<li class="ho hp fy hq b hr jv hs ht hu jw hv hw hx jx hy hz ia jy ib ic id jz ie if ih js jt ju gv" data-selectable-paragraph="" id="28eb"><strong class="hq fz">修改</strong>：進行錯誤或是改善，根據討論而做出的修改 (follow-up commit) 會標示在這邊</li>
</ul>
<p></p>
<p><span>pull request方法</span></p>
<p><span></span></p>
<p><span>1.到自已的final裡<strong class="final-path">downloads建立新的檔案</strong></span></p>
<p><span><strong class="final-path"></strong></span></p>
<p><span><strong class="final-path"><img alt="" height="309" src="https://40971227.github.io/cp2021_hw/images/1.png" width="544"></strong></span></p>
<p><span><strong class="final-path"></strong></span></p>
<p><span><strong class="final-path"><img alt="" height="311" src="https://40971227.github.io/cp2021_hw/images/2.png" width="548"></strong></span></p>
<p><span><strong class="final-path"></strong></span></p>
<p><span><strong class="final-path"><img alt="" height="309" src="https://40971227.github.io/cp2021_hw/images/3.png" width="544"></strong></span></p>
<p><span><strong class="final-path"></strong></span></p>
<p><span><strong class="final-path"><img alt="" height="309" src="https://40971227.github.io/cp2021_hw/images/4.png" width="544"></strong></span></p>
<p><span><strong class="final-path"></strong></span></p>
<h6><span><strong class="final-path">2.pull requests</strong></span></h6>
<p><span><strong class="final-path"><img alt="" height="309" src="https://40971227.github.io/cp2021_hw/images/5.png" width="544"></strong></span></p>
<p><span><strong class="final-path">3.選擇從自己的final&nbsp;pull requests 到老師的final裡<br><br></strong></span></p>
<p><img alt="" height="309" src="https://40971227.github.io/cp2021_hw/images/6.png" width="544"></p>
<p><span><strong class="final-path"></strong></span></p>
</div>
<div></div>
<p><!-- ######################  editor1 結束 ###################### --></p>
<!-- 以下可以開始利用 editor1 的設定編寫對應 Brython 程式 -->
<script type="text/python3">// <![CDATA[
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    # 注意這裡清除的畫布 id 為 brython_div
    bd = doc["brython_div"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
// ]]></script>
<!-- 以上為內建程式, 頁面可透過 ?src=gist_url 執行 -->
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">// <![CDATA[
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace2.editor.setValue(open(self.url).read())
        Ace2.editor.scrollToRow(0)
        Ace2.editor.gotoLine(0)
        Ace2.run()
################################## add1to100 start
add1to100_url = "https://gist.githubusercontent.com/Yao-Hsien41023241/13bd0f765663ee9c2ca6aedb2f5b4b75/raw/beecdf3ba6ed09109f3e9e5febb752d88eb941f2/add1to100.py"
add1to100 = button2(add1to100_url)
doc["add1to100"].bind('click', add1to100.do)
################################## add1to100 end
################################# p261 start 
p261_url = "https://gist.githubusercontent.com/mdecourse/2f56974a40da7a218dbaef376a5b4ca4/raw/980606effcd29635307d6474718cd4a7ef016747/p261.py"
p261 = button2(p261_url)
doc["p261"].bind('click', p261.do)
################################## p261 end
################################## rocflag start
rocflag_url = "https://gist.githubusercontent.com/mdecourse/2f56974a40da7a218dbaef376a5b4ca4/raw/0e2ca81d5c2539c4b6c86071c8cf9de0b1251b9c/roc_flag.py"
rocflag = button2(rocflag_url)
doc["rocflag"].bind("click", rocflag.do)
################################## rocflag end
################################## rocflag start
red_url = "https://gist.githubusercontent.com/Yao-Hsien41023241/49bdf6850d8c68d96c4977e26b95523d/raw/056d375ebc434171d1a59a014f1aac4bce391d41/gistfile1.py"
red = button2(red_url)
doc["red"].bind("click", red.do)
################################## rocflag end
################################## rocflag start
red2_url = "https://gist.githubusercontent.com/Yao-Hsien41023241/9f488942e49d5cbd863ab4980c04cc4c/raw/73d6caf36fdf90de05d9239c3c6eb53906b434c1/gistfile1.py"
red2 = button2(red2_url)
doc["red2"].bind("click", red2.do)
################################## rocflag end
################################# random start 
random_url = "https://gist.githubusercontent.com/Yao-Hsien41023241/9cd45f287593df3e18d4c741d3ee9fc0/raw/c897ae6aef81983d0785cbc1cea49b73bb6e94c9/random.py"
random = button2(random_url)
doc["random"].bind('click', random.do)
################################## random end
################################# final start 
final_url = "https://gist.githubusercontent.com/Yao-Hsien41023241/0e53cb603ad19f0c0a697390c649fa16/raw/3aca06b305bff68ad6f0412a11cc2b3c6a230bc7/final.py"
final = button2(final_url)
doc["final"].bind('click', final.do)
################################## final end
################################# snake start 
snake_url = "https://gist.githubusercontent.com/Yao-Hsien41023241/eb90dce4f75a1ddc5ab051179d4f03bf/raw/14b05c35b91864b68ba068a340e28362dd5797b4/snake.py"
snake = button2(snake_url)
doc["snake"].bind('click', snake.do)
################################## snake end
################################# gear start 
gear_url = "https://gist.githubusercontent.com/Yao-Hsien41023241/498e2e8407c6ed79604ecd419204b209/raw/3c8243956167d7bf39b9adc88141c335f2fb83dd/gear.py"
gear = button2(gear_url)
doc["gear"].bind('click', gear.do)
################################## gear end
################################# snake2 start 
snake2_url = "https://gist.githubusercontent.com/Yao-Hsien41023241/c12c9cd7b1042dc597054c520920297b/raw/7ed1be9ec143fbd49d9c24c8819332c40939892a/snake2.py"
snake2 = button2(snake2_url)
doc["snake2"].bind('click', snake2.do)
################################## snake2 end
################################# final2 start 
final2_url = "https://gist.githubusercontent.com/Yao-Hsien41023241/d76c40bb8355e6f6d418b543812fb262/raw/2aba2dcd4390f6817acb8b987d45f30fbc89c35e/final2.py"
final2 = button2(final2_url)
doc["final2"].bind('click', final2.do)
################################## final2 end
################################# final3 start 
final3_url = "https://gist.githubusercontent.com/Yao-Hsien41023241/c7666cc548675498ace4f4f4f23d7244/raw/94d4711077f7712988485ab9198af20f9f24ac3a/final3.py"
final3 = button2(final3_url)
doc["final3"].bind('click', final3.do)
################################## final3 end
// ]]></script>
</p>
