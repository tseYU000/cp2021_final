<h3>41023124</h3>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- for ggame -->
<p>
<script src="/static/jquery-3.3.1.min.js"></script>
<script src="/static/jquery-ui.1.12.1.min.js"></script>
<script src="/static/pixi-3.0.5.min.js"></script>
<script src="/static/buzz-1.2.1.js"></script>
<script src="/static/bs.js"></script>
<script src="/downloads/brython_modules.js"></script>
</p>
<!-- Cango 程式庫 -->
<p>
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/CangoAxes-6v01-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
</p>
<!-- for Konva 程式庫 -->
<p>
<script src="/static/konva.min.js"></script>
<script>// <![CDATA[
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
// ]]></script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script type="text/javascript" src="/static/ace/FileSaver.min.js"></script>
<script type="text/javascript" src="/static/ace/filereader.js"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script type="text/javascript" src="/static/ace/ace.js"></script>
<script type="text/javascript" src="/static/ace/ext-language_tools.js"></script>
<script type="text/javascript" src="/static/ace/mode-python3.js"></script>
<script type="text/javascript" src="/static/ace/snippets/python.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">// <![CDATA[
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
// ]]></script>
</p>
<p><!-- 印出版次與關鍵字程式 --></p>
<p>
<script type="text/python3">// <![CDATA[
from browser import document as doc
from browser import html
import ace
# 清除畫布
def clear_bd(ev):
    bd = doc["brython_div"]
    bd.clear()
# Brython 3.3.4 內建的 container 名稱為  'container' 且 turtle 輸出為 svg 必須使用 div 訂定 id
Ace = ace.Editor(editor_id="kw_editor", console_id="kw_console", container_id="kw__container", storage_id="kw_py_src" )
Ace.editor.setValue("""

""")
Ace.editor.scrollToRow(0)
Ace.editor.gotoLine(0)
# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run'].bind('click', Ace.run)
doc['kw_show_console'].bind('click', Ace.show_console)
doc['kw_clear_console'].bind('click', Ace.clear_console)
doc['clear_bd'].bind('click', clear_bd)
// ]]></script>
</p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text">.py</label> <input onclick="doSave('kw_py_src', 'kw_filename');" type="submit" value="Save"></form>
<p><button id="kw_run">Run</button> <button id="kw_show_console">Output</button> <button id="kw_clear_console">清除輸出區</button> <button id="clear_bd">清除繪圖區</button> <button onclick="window.location.reload()">Reload</button></p>
<p><button id="w13">HW1-1</button> <button id="keyword">HW1-2</button></p>
<p><button id="asd">manual_snake</button> <button id="zxc">auto snake</button> <button id="qwe">ai snake</button></p>
<p><button id="qaz">exam-1</button> <button id="wsx">exam-2</button> <button id="edc">exam-3</button></p>
<p><button id="qqq">小遊戲</button></p>
<p><button id="www">final1</button> <button id="ccc">final2</button></p>
<p><button id="qwer">Final3-1</button> <button id="asdf">Final3-2</button> <button id="zxcv">Final3-3</button></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console"></textarea></div>
<div id="brython_div"></div>
<div class="col-md-0" height="1" id="graphics-column" width="1"></div>
<p><!-- ****************************** keyword start -->
<script type="text/python3">// <![CDATA[
from browser import document as doc
# 導入位於 static 目錄下的 beditor.py 
import beditor
# 利用 beditor.py 中的 editor 類別建立案例, 對應到 kw1
kw1 = beditor.editor("""from browser import html
from browser import document as doc
from browser import timer

canvas = html.CANVAS(width = 400, height = 100)
canvas.id = "game-board3"
brython_div = doc["brython_div"]
brython_div <= canvas
brython_div <= html.BUTTON("啟動", id="power")
ctx = canvas.getContext("2d")
px = 0
py = 50
width = 20
height = 20
speedx = 2
speedy = 2

def cube():
    global px, py, width, height, speedx, speedy
    ctx.clearRect(px, py, width, height)
    ctx.fillStyle = "red"
    px += speedx
    if px > 200 :
        speedx = 0
        py += speedy
    if py < 0 or (py + height) > canvas.height:
        speedy = -speedy
    ctx.fillRect(px, py, width, height)

cube()

game = None

def gametion(ev) :
    global game
    if game is None :
        game = timer.set_interval(cube, 10)
        doc['power'].text = '暫停'
    elif game == 'hold':
        game = timer.set_interval(cube, 10)
        doc['power'].text = '暫停'
    else:
        timer.clear_interval(game)
        game = 'hold'
        doc['power'].text = '繼續'
doc["power"].bind("click", gametion)

""", "kw_editor", "kw_console", "kw__container", "kw_py_src")
# id 為 "keyword" 的按鈕點按時, 執行 kw1 物件中的 prog 方法
doc["keyword"].bind('click', kw1.prog)
// ]]></script>
</p>
<p>
<script type="text/python3">// <![CDATA[
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023124/05bcce70d88b2c1828f9b33fc011204d/raw/2f392d2281bc576ce01c1d5210d7008eb0fdd08d/hw1"
src = open(url).read()
w13 = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["w13"].bind("click", w13.prog)
// ]]></script>
</p>
<p>
<script type="text/python3">// <![CDATA[
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023124/9845fb1910f117094b64a707cee3c05c/raw/d2f4ea384f502805c9163cc380d43b4089439c4b/manual_snake"
src = open(url).read()
asd = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["asd"].bind("click", asd.prog)
// ]]></script>
</p>
<p>
<script type="text/python3">// <![CDATA[
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023124/1f9731b7e87aa6ce14561d9a5f4be27a/raw/fe593577b949d96c5fd239b04f207fc8bdb6fb55/auto%2520snake"
src = open(url).read()
zxc = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["zxc"].bind("click", zxc.prog)
// ]]></script>
</p>
<p>
<script type="text/python3">// <![CDATA[
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023124/5f4c4c0098635c2e7c43722636893537/raw/dc20cadf1665952b0fda21af25f5a4184886b5b7/my%2520ai%2520snake"
src = open(url).read()
qwe = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["qwe"].bind("click", qwe.prog)
// ]]></script>
</p>
<p>
<script type="text/python3">// <![CDATA[
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023124/c1ad0e2e3fea8f8b9040261abd74739b/raw/1be65b25dc95161f1077725dc234aafa409945c9/exam"
src = open(url).read()
qaz = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["qaz"].bind("click", qaz.prog)
// ]]></script>
</p>
<p>
<script type="text/python3">// <![CDATA[
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023124/86214f53b8658b3a3964b8f69d37c479/raw/c1de81dd257ddcd4bbda468b164e7a30b1381766/exam-2"
src = open(url).read()
wsx = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["wsx"].bind("click", wsx.prog)
// ]]></script>
</p>
<p>
<script type="text/python3">// <![CDATA[
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023124/f2064f8f36f587550eab382e07091040/raw/211ce95f5122cdf86f0b4a6c6e226a11fec1cf0a/exam-3"
src = open(url).read()
edc = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["edc"].bind("click", edc.prog)
// ]]></script>
</p>
<p>
<script type="text/python3">// <![CDATA[
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023124/ddef8c5fb3f6d1672fdc12d32a1c53e6/raw/821a3ee83b84efd429111bed2ce2f3f7fea71ac5/%25E5%25B0%258F%25E9%2581%258A%25E6%2588%25B2"
src = open(url).read()
qqq= beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["qqq"].bind("click", qqq.prog)
// ]]></script>
</p>
<p>
<script type="text/python3">// <![CDATA[
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023124/7b4f1bd6e118313989750e284061a4b5/raw/93181fd6bfdef2812f601f218b43acf45f3f4a23/final1"
src = open(url).read()
www= beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["www"].bind("click", www.prog)
// ]]></script>
</p>
<p>
<script type="text/python3">// <![CDATA[
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023124/de72498b680ece22ce405f3ea229fb1f/raw/824e6f1345e190b112f686f3f2fcdfb82f076510/final2"
src = open(url).read()
ccc= beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["ccc"].bind("click", ccc.prog)
// ]]></script>
</p>
<p>
<script type="text/python3">// <![CDATA[
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023124/b6fc0d753008178344b066cdfd11acbd/raw/a55f5f8a34c95288513896530e67fc2398405161/Final3-1"
src = open(url).read()
qwer = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["qwer"].bind("click", qwer.prog)
// ]]></script>
</p>
<p>
<script type="text/python3">// <![CDATA[
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023124/fc4073bb66b5b09c936d619d2df53794/raw/8ca4ff3c6c2cea933c48e541e570d92131203e41/Final3"
src = open(url).read()
asdf = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["asdf"].bind("click", asdf.prog)
// ]]></script>
</p>
<p>
<script type="text/python3">// <![CDATA[
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023124/97dc7f2e0826dfa11013a146a3c16564/raw/e66bb3c3f7eccf74a7ceb0a5fe30132e18784678/Final3%2520%25E5%25AE%258C%25E6%2595%25B4"
src = open(url).read()
zxcv= beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["zxcv"].bind("click", zxcv.prog)
// ]]></script>
</p>
<p>final 1 影片 : <a href="https://www.youtube.com/watch?v=amfdPQ04UjA&amp;ab_channel=%E5%B0%8F%E8%83%96%E4%BB%94">https://www.youtube.com/watch?v=amfdPQ04UjA&amp;ab_channel=%E5%B0%8F%E8%83%96%E4%BB%94 </a></p>
<p>final 2 影片 : <a href="https://www.youtube.com/watch?v=U8Je0fkZEz0&amp;ab_channel=%E5%B0%8F%E8%83%96%E4%BB%94">https://www.youtube.com/watch?v=U8Je0fkZEz0&amp;ab_channel=%E5%B0%8F%E8%83%96%E4%BB%94 </a></p>
<p>final2製作心得 : 一開始的15x15方格編寫很容易，但一開始在製作final2的功課時，在小綠點跑的時候會有之前的路徑，在覆蓋方格時卡了一下，但後來就修正了，小綠點可以正常的跑動，但在回程時，因為事前沒有先編寫兩道分支，所以在小綠點的回程編寫上，又卡了一小段時間，再重新修正後，小綠點也就能正常地來呈U字形來回跑動了。</p>
<p>final3製作心得 : 學號雙號的順時針一周很好寫，但問題出在不了解如何運用陣列來產生果實，所以有參考同學的程式，也有去詢問同學關於陣列的應用，了解了如何插入與刪除(.pop)，還有5個隨機果實陣列的相關座標[同學利用print()來教我的 ] ，最後也了解相關運作的方法並將過長的程式(兩個變數)更改成更短的程式(一個變數)，並加上暫停鍵與自己的註解。</p>
<p>期末心得 : 剛開始接觸計算機程式跟C++一樣，遇到了很多新奇的電腦語言，但學計算機這門課與C++的不同之處就是可以真正學到如何架設自己的網站，並且持續的更新它，從一開始需要看老師的影片一步一步慢慢做還會做錯，到現在可以直接編寫成長了很多，雖然還是有很多不太了解的東西需要認識，但是我認真覺得學習計算機程式這堂課非常的值得。</p>
