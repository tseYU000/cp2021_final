<h3>41023126</h3>
<p>1.在Snake和final2~3中都要先設定參數</p>
<p>2.利用平面座標(x,y)的觀念，去設定方向</p>
<p>3.在利用for迴圈和<span>&nbsp;if、elif、else的技巧製作程式</span></p>
<p></p>
<!-- 導入 brython 程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<script>// <![CDATA[
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
// ]]></script>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script type="text/javascript" src="/static/ace/FileSaver.min.js"></script>
<script type="text/javascript" src="/static/ace/filereader.js"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script type="text/javascript" src="/static/ace/ace.js"></script>
<script type="text/javascript" src="/static/ace/ext-language_tools.js"></script>
<script type="text/javascript" src="/static/ace/mode-python3.js"></script>
<script type="text/javascript" src="/static/ace/snippets/python.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">// <![CDATA[
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
// ]]></script>
</p>
<p><!-- 印出版次與關鍵字程式 --></p>
<p>
<script type="text/python3">// <![CDATA[
from browser import document as doc
import ace
# 清除畫布
def clear_bd(ev):
    bd = doc["brython_div"]
    bd.clear()
# Brython 3.3.4 內建的 container 名稱為  'container' 且 turtle 輸出為 svg 必須使用 div 訂定 id
Ace = ace.Editor(editor_id="kw_editor", console_id="kw_console", container_id="kw__container", storage_id="kw_py_src" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.github.com/41023126/d488026b5dae3c83752d8cb9752ac3fc "
    prog = open(url).read()

    # 將程式載入編輯區
    Ace.editor.setValue(prog)
    Ace.editor.scrollToRow(0)
    Ace.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace.run()

chec_qwe_url = "https://gist.githubusercontent.com/41023126/6d7cdae2b8bcf87ebc702aa809e729a9/raw/8288d63d8211651f4ff1fef627a0685ba806582d/EXAM"
 # 從 gist 取得程式碼
chec_wq = open(chec_qwe_url).read()

def chec_inp(ev):
     Ace.editor.setValue(chec_wq)
     Ace.editor.scrollToRow(0)
     Ace.editor.gotoLine(0)
     #Ace.run()

# id 為 "asd" 的按鈕點按時, 執行 chec_inp 方法
doc["asd"].bind('click', chec_inp)
# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run'].bind('click', Ace.run)
doc['kw_show_console'].bind('click', Ace.show_console)
doc['kw_clear_console'].bind('click', Ace.clear_console)
doc['clear_bd'].bind('click', clear_bd)

snake_qwe_url = "https://gist.githubusercontent.com/41023126/ad8ea9f783335ad994aa2113cb33f658/raw/63e98ad4b61242898ba85ae7d1fc15b5cbc39056/%25E8%2587%25AA%25E5%258B%2595%25E8%25B2%25AA%25E9%25A3%259F%25E8%259B%2587"
 # 從 gist 取得程式碼
snake_wq = open(snake_qwe_url).read()

def snake_inp(ev):
     Ace.editor.setValue(snake_wq)
     Ace.editor.scrollToRow(0)
     Ace.editor.gotoLine(0)
     Ace.run()

# id 為 "snake" 的按鈕點按時, 執行 chec_inp 方法
doc["snake"].bind('click', snake_inp)
final_qwe_url = "https://gist.githubusercontent.com/41023126/37cb47c01b85a9ec3f7f37266985d52a/raw/b204da0cd2292955046f9ee2f6a4e6a76f812e43/final2"
 # 從 gist 取得程式碼
final_wq = open(final_qwe_url).read()

def final_inp(ev):
     Ace.editor.setValue(final_wq)
     Ace.editor.scrollToRow(0)
     Ace.editor.gotoLine(0)
     Ace.run()
# id 為 "final" 的按鈕點按時, 執行 chec_inp 方法
doc["final"].bind('click', final_inp)
final3_qwe_url = "https://gist.githubusercontent.com/41023126/abc9ff33278e574f12a01968051e8f56/raw/e8d9938232782b3469da9075a14cc02aebae9f90/final1"
 # 從 gist 取得程式碼
final3_wq = open(final3_qwe_url).read()

def final3_inp(ev):
     Ace.editor.setValue(final3_wq)
     Ace.editor.scrollToRow(0)
     Ace.editor.gotoLine(0)
     Ace.run()
# id 為 "final3" 的按鈕點按時, 執行 chec_inp 方法
doc["final3"].bind('click', final3_inp)

final10_qwe_url = "https://gist.githubusercontent.com/41023126/255c10b90bb7a6795cf8446e2dcf306f/raw/9ef05151a12e3815202574ca0bcdbe63b85cf142/final3"
 # 從 gist 取得程式碼
final10_wq = open(final10_qwe_url).read()
def final10_inp(ev):
     Ace.editor.setValue(final10_wq)
     Ace.editor.scrollToRow(0)
     Ace.editor.gotoLine(0)
     Ace.run()
# id 為 "final10" 的按鈕點按時, 執行 chec_inp 方法
doc["final10"].bind('click', final10_inp)

hw11_qwe_url = "https://gist.githubusercontent.com/41023126/d488026b5dae3c83752d8cb9752ac3fc/raw/2e59bfccfff8e95b75cebf1005b95726745e6a9c/HW1"
 # 從 gist 取得程式碼
hw11_wq = open(hw11_qwe_url).read()

def hw11_inp(ev):
     Ace.editor.setValue(hw11_wq)
     Ace.editor.scrollToRow(0)
     Ace.editor.gotoLine(0)
     Ace.run()
# id 為 "紅點移動" 的按鈕點按時, 執行 chec_inp 方法
doc["hw11"].bind('click', hw11_inp)

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run'].bind('click', Ace.run)
doc['kw_show_console'].bind('click', Ace.show_console)
doc['kw_clear_console'].bind('click', Ace.clear_console)
doc['clear_bd'].bind('click', clear_bd)
# 呼叫函式執行
run()
// ]]></script>
</p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<!-- 存擋表單開始 --><form><label>Filename: <input id="kw_filename" placeholder="輸入文件名" type="text">.py</label> <input onclick="doSave('kw_py_src', 'kw_filename');" type="submit" value="Save"></form><!-- 存擋表單結束 -->
<p></p>
<!-- 執行與清除按鈕開始 -->
<p><button id="kw_run">Run</button> <button id="kw_show_console">Output</button> <button id="kw_clear_console">清除輸出區</button><button id="clear_bd">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><button id="hw11">紅點移動</button> <button id="asd">列出10個座標</button> <button id="snake">snake</button></p>
<p><button id="final3">final1</button> <button id="final">final2</button> <button id="final10">final3</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div 作為切入位置 --></p>
<div id="brython_div"></div>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="https://mde.tw/cp2021/cmsimde/static/Cango-24v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/gearUtils-09.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/SVGpathUtils-6v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/sylvester.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/PrairieDraw.js"></script>
</p>
<p>遇到的錯誤:叫錯函式庫、設定按鈕程式id搞到亂掉</p>
<p>期末心得:我是到大學遇到這個課程，才開始去研究程式語言，在高職的時候只有學自動化才會遇到程式，所以上大學遇到這門課，一開始真的讓我很頭痛，什麼基礎都沒有就要開始寫程式，讓我感覺到我到底在做時麼的感覺，作業都只能吃抄別人的，甚麼都看不懂，而現在看得懂同學們打的程式，但是我要自己打出程式，每次都會卡關，要看著別人的程式才會發現問題出在哪，例如:忘記標(:)、或是參數設錯、<span>搞錯變數的資料類別，叫錯函式等等，我想打了那麼多的程式，對於程式已經有更多的了解，但是還有一個大問題，就是英文不太好，很多的資料都是用英文寫的，對於程式和英文都有很大的學習空間。</span></p>
